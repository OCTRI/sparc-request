-# Copyright Â© 2011-2019 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLx`ARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

- line_items_visits = []
- line_items = Dashboard::ServiceCalendars.pppv_line_items_visits_to_display(arm, service_request, sub_service_request, merged: merged, consolidated: consolidated)

- line_items.each do |ssr, livs|
  - line_items_visits << livs
  - locked = !ssr.can_be_edited? && !admin

  -# SSR Header Row
  %tr.organization-header{ class: locked ? 'alert-danger' : 'alert-primary' }
    %th{ colspan: portal ? 13 : 50 }
      = display_org_name(livs[0].line_item.service.organization_hierarchy, ssr, locked)

  -# Line Items Visits
  - livs.each do |liv|
    %tr{ class: ["line-items-visit-#{liv.id}", locked ? 'text-danger' : ''] }
      %td.service-name{ colspan: 8, title: calendar_service(liv), data: { toggle: 'tooltip', html: 'true' } }
        = calendar_service(liv)
      %td.notes.text-center{ colspan: 2, class: locked ? '' : 'editable', title: "#{Service.model_name.human} #{Note.model_name.plural.capitalize}", data: { toggle: 'tooltip' } }
        = notes_button(liv, disabled: locked, srid: service_request.try(:id), ssrid: sub_service_request.try(:id))
      %td.status.text-center{ colspan: 3, title: PermissibleValue.get_value('status', ssr.status), data: { toggle: 'tooltip' } }
        = PermissibleValue.get_value('status', ssr.status)
      %td.service-rate.text-center{ colspan: 3, title: display_service_rate(liv.line_item), data: { toggle: 'tooltip' } }
        = display_service_rate(liv.line_item)
      -# TODO: Fix with Admin Calendar
      - your_cost = currency_converter(liv.line_item.applicable_rate)
      - modified  = liv.line_item.admin_rates.present?
      %td.your-cost.text-center{ colspan: 3, title: modified ? t('calendars.tooltips.modified_rate', cost: your_cost) : your_cost, data: { toggle: 'tooltip', html: 'true' } }
        - if portal
          %a.edit-your-cost{ href: 'javascript:void(0)', data: { name: 'displayed_cost', title: liv.line_item.admin_rates.present? ? t(:dashboard)[:study_level_activities][:tooltips][:modified_rate] : t(:dashboard)[:study_level_activities][:tooltips][:change_rate], value: your_cost, id: liv.line_item.id, url: dashboard_line_item_path(liv.line_item) }, class: (liv.line_item.admin_rates.present? ? 'text-danger' : '') }
        - else
          - if modified
            %span.text-warning
              = your_cost
          - else
            = your_cost

      - unless portal
        %td.unit-type.text-center{ colspan: 4, title: display_unit_type(liv), data: { toggle: 'tooltip' } }
          = display_unit_type(liv)

      = render 'service_calendars/master_calendar/pppv/subject_count', liv: liv, service_request: service_request, sub_service_request: sub_service_request, page: page, tab: tab, merged: merged, locked: locked

      = render 'service_calendars/master_calendar/pppv/template/select_row', liv: liv, service_request: service_request, sub_service_request: sub_service_request, locked: locked, page: page
      - visits = liv.ordered_visits.page(page).eager_load(line_items_visit: { line_item: { service: :pricing_maps } })
      - visits.each do |v|
        %td.visit.template-visit.text-center{ class: ["visit-#{v.id}", locked ? '' : 'editable'], colspan: 3 }
          = render "service_calendars/master_calendar/pppv/#{tab}/#{tab}_visit_input", service_request: service_request, visit: v, tab: tab, page: page, admin: admin, locked: locked
      - (Visit.per_page - visits.size).times do
        %td{ colspan: 3 }

      - unless portal
        = render 'service_calendars/master_calendar/pppv/total_per_patient', liv: liv
        = render 'service_calendars/master_calendar/pppv/total_per_study', liv: liv

- unless portal
  = render 'service_calendars/master_calendar/pppv/totals/pppv_totals', service_request: service_request, arm: arm, visit_groups: visit_groups, tab: tab, line_items_visits: line_items_visits.flatten, page: page
