-# Copyright Â© 2011-2020 MUSC Foundation for Research Development~
-# All rights reserved.~

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:~

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.~

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following~
-# disclaimer in the documentation and/or other materials provided with the distribution.~

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products~
-# derived from this software without specific prior written permission.~

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,~
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT~
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL~
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS~
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR~
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.~

- if action_name == 'edit'
  - disable_left = visit_group.position % VisitGroup.per_page == 1 || visit_group.higher_item.nil?
  - disable_right = visit_group.position % VisitGroup.per_page == 0 || visit_group.lower_item.nil?

= form_for visit_group, remote: true, html: { class: 'w-100 visit-group-form' } do |f|
  = f.hidden_field :arm_id
  = hidden_field_tag :arm_id, visit_group.arm_id
  = hidden_field_tag :srid, service_request.try(:id)
  = hidden_field_tag :ssrid, sub_service_request.try(:id)
  = hidden_field_tag :tab, tab
  = hidden_field_tag :page, page
  - pages.each do |arm_id, page|
    = hidden_field_tag "pages[#{arm_id}]", page
  .d-flex
    - if action_name == 'edit'
      %button.btn.btn-white.rounded-0.d-flex.align-items-center.change-visit-btn{ type: 'submit', class: disable_left ? 'disabled' : '', title: disable_left ? '' : t('visit_groups.form.previous', name: visit_group.higher_item.name), data: { toggle: 'tooltip', placement: 'left', new_visit: 'previous' } }
        = icon('fas', 'chevron-left')
      %button.btn.btn-white.rounded-0.d-flex.align-items-center.order-last.change-visit-btn{ type: 'submit', class: disable_right ? 'disabled' : '', title: disable_right ? '' : t('visit_groups.form.next', name: visit_group.lower_item.name), data: { toggle: 'tooltip', placement: 'right', new_visit: 'next' } }
        = icon('fas', 'chevron-right')
    .flex-fill
      .form-group{ class: action_name == 'edit' ? 'mb-1' : '' }
        = f.label :name, class: 'required'
        = f.text_field :name, class: ['form-control', action_name == 'edit' ? 'form-control-sm' : '']
      .form-row
        .form-group.col-6{ class: action_name == 'edit' ? 'mb-1' : '' }
          - min, max = move_visit_group_boundaries(visit_group, arm)
          - disable = min == max && min.present? # Disable if there can only be one day to choose from and the user did not select the blank option
          = f.label :day, class: 'required'
          = f.number_field :day, class: ['form-control', action_name == 'edit' ? 'form-control-sm' : ''], min: min, max: max, value: disable ? min : visit_group.day, readonly: disable
          - if min || max
            %small.form-text.text-muted
              - if min
                = t('constants.min', min: min)
              - if max
                = t('constants.max', max: max)
            - if min == max && (visit_group.new_record? || visit_group.position_changed?)
              %small.form-text.text-warning
                = t('visit_groups.form.move_note')
        .form-group.col-6{ class: action_name == 'edit' ? 'mb-1' : '' }
          = f.label :position, class: 'required'
          = f.select :position, visit_position_options(arm, visit_group), { include_blank: action_name == 'new' }, class: 'selectpicker', disabled: visit_group.nil?, data: { style: action_name == 'edit' ? 'btn-sm btn-light dropdown-menu-right' : 'btn-light', size: 10 }
      .form-row
        .form-group.col-6{ class: action_name == 'edit' ? 'mb-2' : '' }
          = f.label :window_before, class: 'required'
          = f.number_field :window_before, class: ['form-control', action_name == 'edit' ? 'form-control-sm' : ''], min: 0
        .form-group.col-6{ class: action_name == 'edit' ? 'mb-2' : '' }
          = f.label :window_after, class: 'required'
          = f.number_field :window_after, class: ['form-control', action_name == 'edit' ? 'form-control-sm' : ''], min: 0
  .modal-footer.d-flex.row.border-top.pb-0{ class: action_name == 'edit' ? 'justify-content-between pt-2' : 'pt-3' }
    - if action_name == 'edit'
      = delete_visit_group_button(visit_group, srid: service_request.try(:id), ssrid: sub_service_request.try(:id), tab: tab, page: page, pages: pages)
    - else
      %button.btn.btn-secondary{ type: 'button', data: { dismiss: 'modal' } }
        = t('actions.close')
    = f.submit t('actions.submit'), class: ['btn btn-primary', action_name == 'edit' ? 'btn-sm' : '']
