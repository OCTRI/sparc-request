-# Copyright Â© 2011-2019 MUSC Foundation for Research Development
-# All rights reserved.

-# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

-# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

-# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
-# disclaimer in the documentation and/or other materials provided with the distribution.

-# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products
-# derived from this software without specific prior written permission.

-# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
-# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
-# SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
-# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

%aside#protocolFilters
  .card
    = form_for_filterrific filterrific, remote: true, html: { id: 'protocolFiltersForm', autocomplete: 'off' } do |form|
      = form.hidden_field :sorted_by
      .card-header
        %h4.mb-0.mr-auto
          = t(:dashboard)[:protocol_filters][:header]
        = link_to t(:actions)[:save], 'javascript:void(0)', title: t(:dashboard)[:protocol_filters][:tooltips][:save], class: 'border-right px-2', id: 'saveProtocolFilters', data: { toggle: 'tooltip', placement: 'top' }
        = link_to t(:actions)[:reset], reset_filterrific_url, remote: true, title: t(:dashboard)[:protocol_filters][:tooltips][:reset], class: 'px-2', data: { toggle: 'tooltip', placement: 'top' }
      .card-body
        .form-group
          .input-group
            = form.fields_for :search_query do |search|
              .input-group-prepend.col-3.p-0
                = search.select :search_drop, options_for_select(ProtocolFilter.search_filters, filterrific.search_query.try(:search_drop)), { prompt:  t(:dashboard)[:protocol_filters][:search_by] }, class: "selectpicker form-control", data: { style: 'btn btn-primary' }
              = search.text_field :search_text, value: filterrific.search_query.try(:search_text), placeholder: t('dashboard.protocol_filters.search_placeholder'), class: 'form-control'
        .form-group.row
          = form.label :with_status, t(:dashboard)[:protocol_filters][:status], class: 'col-4 col-form-label pr-0'
          .col-8
            = form.select :with_status, filterrific.select_options[:with_status], {}, class: "form-control selectpicker", multiple: true, data: { none_selected_text: t(:constants)[:prompts][:any], live_search: true }
        .form-group.row
          = form.label :with_organization, t(:dashboard)[:protocol_filters][:organization], class: 'col-4 col-form-label pr-0'
          .col-8.drop-underneath
            = form.select :with_organization, nil, {}, class: "form-control selectpicker", multiple: true, data: { none_selected_text: t(:constants)[:prompts][:any], live_search: true } do
              = filterrific.select_options[:with_organization].each do |org_type, orgs|
                %optgroup{ label: org_type }
                  - orgs.each do |name, id|
                    %option{ value: id, selected: filterrific.with_organization && filterrific.with_organization.include?(id), data: {content: name} }
        - if admin
          .form-group.row
            = form.label :with_owner, t(:dashboard)[:protocol_filters][:owner], class: 'col-4 col-form-label pr-0'
            .col-8
              = form.select :with_owner, filterrific.select_options[:with_owner], {}, class: "form-control selectpicker owner-select", multiple: true, data: { none_selected_text: t(:constants)[:prompts][:any], live_search: true }
        .form-group.row
          = form.label :show_archived, t(:dashboard)[:protocol_filters][:archived], class: 'col-4 col-form-label pr-0'
          .col-8
            = form.check_box :show_archived, data: { toggle: 'toggle', on: t('dashboard.protocol_filters.archived'), off: t('dashboard.protocol_filters.unarchived'), style: 'btn-block' }
        - if admin
          %hr
          .form-group.row.mb-0
            = form.label "admin_filter_for_identity_#{current_user.id}", t(:dashboard)[:protocol_filters][:my_protocols], class: 'col-6 col-form-label pr-0'
            .col-4.d-flex.align-items-center.justify-content-center
              = form.radio_button :admin_filter, "for_identity #{current_user.id}"
          .form-group.row.mb-0
            = form.label "admin_filter_for_admin_#{current_user.id}", t(:dashboard)[:protocol_filters][:my_admin_protocols], class: 'col-6 col-form-label pr-0'
            .col-4.d-flex.align-items-center.justify-content-center
              = form.radio_button :admin_filter, "for_admin #{current_user.id}"
        - else
          = form.hidden_field :admin_filter, value: "for_identity #{current_user.id}"
      .card-footer
        %button.btn.btn-primary.btn-block{ type: 'submit' }
          = t(:actions)[:filter]

  = render 'dashboard/protocol_filters/saved_searches'
